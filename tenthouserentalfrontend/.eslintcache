[{"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\App.js":"3","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Routes\\routes.js":"4","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\landingPage.jsx":"5","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\register.jsx":"6","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\login.jsx":"7","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\product.jsx":"8","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\addProduct.jsx":"9","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\customer.jsx":"10","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\addCustomer.jsx":"11","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\summaryReport.jsx":"12","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\detailedReport.jsx":"13","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\rentItems.jsx":"14","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\returnItems.jsx":"15","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\layout.jsx":"16","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\cardview.jsx":"17","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\CustomerAPi.js":"18","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\ProductApi.js":"19","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\ReportApi.js":"20","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\tabledata.jsx":"21","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\UserAPi.js":"22","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\TransactionApi.js":"23"},{"size":553,"mtime":1610261788837,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":193,"mtime":1610261824325,"results":"27","hashOfConfig":"25"},{"size":2044,"mtime":1610262027888,"results":"28","hashOfConfig":"25"},{"size":159,"mtime":1610262036717,"results":"29","hashOfConfig":"25"},{"size":5083,"mtime":1610286681243,"results":"30","hashOfConfig":"25"},{"size":4508,"mtime":1610298412534,"results":"31","hashOfConfig":"25"},{"size":3413,"mtime":1610295667954,"results":"32","hashOfConfig":"25"},{"size":7400,"mtime":1610278300625,"results":"33","hashOfConfig":"25"},{"size":3383,"mtime":1610294746741,"results":"34","hashOfConfig":"25"},{"size":4871,"mtime":1610277453290,"results":"35","hashOfConfig":"25"},{"size":948,"mtime":1610273483663,"results":"36","hashOfConfig":"25"},{"size":973,"mtime":1610273497385,"results":"37","hashOfConfig":"25"},{"size":6419,"mtime":1610297391599,"results":"38","hashOfConfig":"25"},{"size":6430,"mtime":1610298887986,"results":"39","hashOfConfig":"25"},{"size":1726,"mtime":1610297681346,"results":"40","hashOfConfig":"25"},{"size":1800,"mtime":1610295816285,"results":"41","hashOfConfig":"25"},{"size":655,"mtime":1610281459256,"results":"42","hashOfConfig":"25"},{"size":775,"mtime":1610281405702,"results":"43","hashOfConfig":"25"},{"size":439,"mtime":1610270539169,"results":"44","hashOfConfig":"25"},{"size":528,"mtime":1610273372980,"results":"45","hashOfConfig":"25"},{"size":746,"mtime":1610282411093,"results":"46","hashOfConfig":"25"},{"size":1008,"mtime":1610298765363,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"8zl4rb",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\index.js",[],["104","105"],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\reportWebVitals.js",[],["106","107"],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\App.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Routes\\routes.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\landingPage.jsx",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\register.jsx",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\login.jsx",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\product.jsx",["108"],"import React,{useState,useEffect} from 'react';\r\nimport CardView from './cardview'\r\nimport {CardDeck,Form,FormControl,Button} from 'react-bootstrap'\r\nimport {getAllProducts} from \"../Data/ProductApi\"\r\n\r\n\r\nconst Product=(props)=>{\r\n  //----------------------------Retrieval and storage of user data---------------------------------------------------------------------\r\n     const [data,setData]=useState([]);\r\n       const[filter,setFilter]=useState(\"\")\r\n     useEffect(()=>{getAllProducts(handleData) },[])\r\n     let message=\"\";\r\n    // let view=[];\r\n      const handleData=(userdata)=>{ setData(userdata);}\r\n    \r\n    //----------------------------------------------------------------------------------------------------------------------------\r\n\r\n   \r\n   \r\n    // To filter results according to search string and set message according to the results---------------------------------------------------\r\n    \r\n    //  let filteredResults=data.filter(                                          \r\n    //   (detail)=>detail.name.substring(0,filter.length)\r\n    //   .toUpperCase()===filter.toUpperCase())\r\n   \r\n   \r\n    //   if(filteredResults.length===0)\r\n    //     message=`No Results Found for ${filter}`\r\n    //     else\r\n    //     message=`Candidates with name ${filter}`\r\n      \r\n    //  -------------------------------------------------------------------------------------------------------------------------------------------------\r\n     \r\n    // ----------------Set the value of display component based on filter keyword(if provided) or otherwise---------------------------------------------------\r\n    //  if(filter.length!==0)\r\n    //     {\r\n    //        view = filteredResults.map((detail) => {\r\n    //        return  <CardView info={detail} key={detail.id}/>})\r\n    //      }\r\n     \r\n    //      else\r\n    //      {\r\n    //         message=\"Candidate List\"\r\n    //         view = data.map((detail) => {\r\n    //         return  <CardView info={detail} key={detail.id}/>})\r\n    //      }\r\n        //  -------------------------------------------------------------------------------------------------------------------------------\r\n        //\r\n\r\n        const imgsrc=\"https://via.placeholder.com/150/000000/FFFFFF/?text=product\"\r\n         let view = data.map((detail,index) => {\r\n             return  <CardView info={detail} key={index} imgsrc={imgsrc}/>})\r\n      \r\n        \r\nconst handleClick=()=>{\r\n    props.history.push('/Products/Add')\r\n}\r\n\r\n    return(\r\n      <div style={{marginTop:30,marginBotom:50}}>\r\n         <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginLeft:'55px',\r\n            marginTop: 50,\r\n          }}\r\n        >\r\n             <Button\r\n            variant=\"success\"\r\n            size=\"md\"\r\n            onClick={handleClick}\r\n            style={{ marginRight: 15, fontWeight: 600, marginLeft: 15 }}\r\n          >\r\n            Add New Product\r\n          </Button>\r\n         \r\n        <h3 >{message}</h3>  \r\n          <Form style={{width:\"20rem\",marginRight:'65px'}} className=\"ml-auto\">\r\n         <FormControl type=\"text\" placeholder=\"Search Product name\"  onInput={(event)=>setFilter(event.target.value)} />\r\n      \r\n    </Form>\r\n        </div>\r\n          \r\n           <CardDeck  className=\"col-12\" style={{marginTop:50,marginLeft:'15px'}}>{view}</CardDeck>\r\n           \r\n           <br/>\r\n           <br/>\r\n      </div> \r\n    )\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\addProduct.jsx",["109"],"import React, { useState } from \"react\";\r\nimport { Prompt, matchPath } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport {addNewProduct} from '../Data/ProductApi'\r\n\r\n\r\nconst CONTAINER = styled.div`\r\n  background: #f7f9fa;\r\n  height: auto;\r\n  width: 90%;\r\n  margin: 5em auto;\r\n  color: snow;\r\n  -webkit-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  -moz-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n\r\n  @media (min-width: 786px) {\r\n    width: 60%;\r\n  }\r\n  label {\r\n    color: #24b9b6;\r\n    font-size: 1.2em;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h1 {\r\n    color: #24b9b6;\r\n    padding-top: 0.5em;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 2.5em;\r\n  }\r\n  .error {\r\n    border: 2px solid #ff6565;\r\n  }\r\n\r\n  .error-message {\r\n    color: #ff6565;\r\n    padding: 0.5em 0.2em;\r\n    height: 1em;\r\n    position: absolute;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst MYFORM = styled(Form)`\r\n  width: 90%;\r\n  text-align: left;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n  @media (min-width: 786px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst BUTTON = styled(Button)`\r\n  background: #1863ab;\r\n  border: none;\r\n  font-size: 1.2em;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    background: #1d3461;\r\n  }\r\n`;\r\n\r\nlet values = {};\r\nconst initialValues = {\r\n  Product_title: \"\",\r\n Product_id: \"\",\r\n  Quantity_total: \"\",\r\n  price: \"\",\r\n  Quantity_booked: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  Product_title: Yup.string().required(\"Name is required\"),\r\n\r\n Product_id: Yup.string().required(\"No password provided.\"),\r\n\r\n  Quantity_total: Yup.number().required(\"Required\"),\r\n  price: Yup.number().required(\"Required\"),\r\n  Quantity_booked: Yup.number().required(\"Required\"),\r\n});\r\n\r\nfunction AddProduct() {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    values = {\r\n      Product_title: value.Product_title,\r\n     Product_id: value.Product_id,\r\n      Quantity_total: value.Quantity_total,\r\n      price: value.price,\r\n      Quantity_booked: value.Quantity_booked,\r\n    };\r\n    let views = 0;\r\n    addNewProduct(values)\r\n    // ViewDataAPI.saveViewData(views);\r\n    console.log(values)\r\n    setIsSubmitted(true);\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 50 }}>\r\n      <br />\r\n      <h3 style={{ textAlign: \"center\" }}>Add Product to Inventory</h3>\r\n      <Prompt\r\n        when={!isSubmitted}\r\n        message={({ pathname }) => {\r\n          return matchPath(pathname, { path: \"/AddProduct\" })\r\n            ? true\r\n            : \"Are you sure you want to navigate away?\";\r\n        }}\r\n      />\r\n      <CONTAINER>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n          }) => (\r\n            <MYFORM onSubmit={handleSubmit} className=\"mx-auto\">\r\n              <Form.Group controlId=\"Product_title\">\r\n                <Form.Label>Product Name :</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Product_title\"\r\n                  placeholder=\"Product_title\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Product_title}\r\n                  className={\r\n                    touched.Product_title && errors.Product_title ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.Product_title && errors.Product_title ? (\r\n                  <div className=\"error-message\">{errors.Product_title}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Product_id\">\r\n                <Form.Label>Product Description:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Product_id\"\r\n                  placeholder=\"Product_id\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Product_id}\r\n                  className={\r\n                    touched.Product_id && errors.Product_id\r\n                      ? \"error\"\r\n                      : null\r\n                  }\r\n                />\r\n\r\n                {touched.Product_id && errors.Product_id ? (\r\n                  <div className=\"error-message\">\r\n                    {errors.Product_id}\r\n                  </div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Quantity_total\">\r\n                <Form.Label>Total Quantity :</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Quantity_total\"\r\n                  placeholder=\"Quantity_total\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Quantity_total}\r\n                  className={\r\n                    touched.Quantity_total && errors.Quantity_total ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.Quantity_total && errors.Quantity_total ? (\r\n                  <div className=\"error-message\">{errors.Quantity_total}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"price\">\r\n                <Form.Label>Price:</Form.Label>\r\n                <Form.Control\r\n                  type=\"price\"\r\n                  name=\"price\"\r\n                  placeholder=\"price\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.price}\r\n                  className={touched.price && errors.price ? \"error\" : null}\r\n                />\r\n                {touched.price && errors.price ? (\r\n                  <div className=\"error-message\">{errors.price}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Quantity_booked\">\r\n                <Form.Label>Quantity booked:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Quantity_booked\"\r\n                  placeholder=\"Quantity_booked\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Quantity_booked}\r\n                  className={\r\n                    touched.Quantity_booked && errors.Quantity_booked ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.Quantity_booked && errors.Quantity_booked ? (\r\n                  <div className=\"error-message\">{errors.Quantity_booked}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n\r\n              <BUTTON\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                Submit\r\n              </BUTTON>\r\n              <BUTTON variant=\"primary\" type=\"reset\">\r\n                Cancel\r\n              </BUTTON>\r\n            </MYFORM>\r\n          )}\r\n        </Formik>\r\n      </CONTAINER>\r\n    </div>\r\n  );\r\n}\r\nexport default AddProduct;\r\n","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\customer.jsx",["110"],"import React,{useState,useEffect} from 'react';\r\nimport CardView from './cardview'\r\nimport {CardDeck,Form,FormControl,Button} from 'react-bootstrap'\r\nimport {getAllCustomers} from \"../Data/CustomerAPi\"\r\n\r\nconst Customer = (props) => {\r\n    //----------------------------Retrieval and storage of user data---------------------------------------------------------------------\r\n     const [data,setData]=useState([]);\r\n       const[filter,setFilter]=useState(\"\")\r\n     useEffect(()=>{getAllCustomers(handleData) },[])\r\n     let message=\"\";\r\n    // let view=[];\r\n     const handleData=(userdata)=>{ setData(userdata);}\r\n    \r\n    //----------------------------------------------------------------------------------------------------------------------------\r\n\r\n   \r\n   \r\n    // To filter results according to search string and set message according to the results---------------------------------------------------\r\n    \r\n    //  let filteredResults=data.filter(                                          \r\n    //   (detail)=>detail.name.substring(0,filter.length)\r\n    //   .toUpperCase()===filter.toUpperCase())\r\n   \r\n   \r\n    //   if(filteredResults.length===0)\r\n    //     message=`No Results Found for ${filter}`\r\n    //     else\r\n    //     message=`Candidates with name ${filter}`\r\n      \r\n    //  -------------------------------------------------------------------------------------------------------------------------------------------------\r\n     \r\n    // ----------------Set the value of display component based on filter keyword(if provided) or otherwise---------------------------------------------------\r\n    //  if(filter.length!==0)\r\n    //     {\r\n    //        view = filteredResults.map((detail) => {\r\n    //        return  <CardView info={detail} key={detail.id}/>})\r\n    //      }\r\n     \r\n    //      else\r\n    //      {\r\n    //         message=\"Candidate List\"\r\n    //         view = data.map((detail) => {\r\n    //         return  <CardView info={detail} key={detail.id}/>})\r\n    //      }\r\n        //  -------------------------------------------------------------------------------------------------------------------------------\r\n        //\r\n\r\n\r\n        let imgsrc=\"http://www.gravatar.com/avatar/?d=mp\"\r\n         let view = data.map((detail,index) => {\r\n             return  <CardView info={detail} key={index} imgsrc={imgsrc} />})\r\n\r\n      \r\n      \r\nconst handleClick=()=>{\r\n    props.history.push('/Customer/Add')\r\n}\r\n\r\n    return(\r\n      <div style={{marginTop:30,marginBotom:50}}>\r\n         <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginLeft:'55px',\r\n            marginTop: 50,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"success\"\r\n            size=\"md\"\r\n            onClick={handleClick}\r\n            style={{ marginRight: 15, fontWeight: 600, marginLeft: 15 }}\r\n          >\r\n            Add New Customer\r\n          </Button>\r\n        <h3 >{message}</h3>  \r\n          <Form style={{width:\"20rem\",marginRight:'65px'}} className=\"ml-auto\">\r\n      <FormControl type=\"text\" placeholder=\"Search Customer name\"  onInput={(event)=>setFilter(event.target.value)} />\r\n      \r\n    </Form>\r\n        </div>\r\n          \r\n           <CardDeck  className=\"col-12\" style={{marginTop:50,marginLeft:'15px'}}>{view}</CardDeck>\r\n           \r\n           <br/>\r\n           <br/>\r\n      </div> \r\n    )\r\n};\r\n\r\nexport default Customer;","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\addCustomer.jsx",["111"],"import React, { useState } from \"react\";\r\nimport { Prompt, matchPath } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\nimport {addCustomer} from \"../Data/CustomerAPi\"\r\n\r\n\r\nconst CONTAINER = styled.div`\r\n  background: #f7f9fa;\r\n  height: auto;\r\n  width: 90%;\r\n  margin: 5em auto;\r\n  color: snow;\r\n  -webkit-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  -moz-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n\r\n  @media (min-width: 786px) {\r\n    width: 60%;\r\n  }\r\n  label {\r\n    color: #24b9b6;\r\n    font-size: 1.2em;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h1 {\r\n    color: #24b9b6;\r\n    padding-top: 0.5em;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 2.5em;\r\n  }\r\n  .error {\r\n    border: 2px solid #ff6565;\r\n  }\r\n\r\n  .error-message {\r\n    color: #ff6565;\r\n    padding: 0.5em 0.2em;\r\n    height: 1em;\r\n    position: absolute;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst MYFORM = styled(Form)`\r\n  width: 90%;\r\n  text-align: left;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n  @media (min-width: 786px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst BUTTON = styled(Button)`\r\n  background: #1863ab;\r\n  border: none;\r\n  font-size: 1.2em;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    background: #1d3461;\r\n  }\r\n`;\r\n\r\nlet values = {};\r\nconst initialValues = {\r\n  name: \"\",\r\n  Customer_id: \"\",\r\n \r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Name is required\"),\r\n\r\n  Customer_id: Yup.string().required(\"Customer Id required.\"),\r\n\r\n \r\n});\r\n\r\nfunction AddCustomer() {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    values = {\r\n     name: value.name,\r\n     Customer_id:value.Customer_id\r\n    };\r\n    let views = 0;\r\n   addCustomer(values);\r\n    // ViewDataAPI.saveViewData(views);\r\n    console.log(values)\r\n    setIsSubmitted(true);\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 50 }}>\r\n      <br />\r\n      <h3 style={{ textAlign: \"center\" }}>Add New Customer</h3>\r\n      <Prompt\r\n        when={!isSubmitted}\r\n        message={({ pathname }) => {\r\n          return matchPath(pathname, { path: \"/AddCustomer\" })\r\n            ? true\r\n            : \"Are you sure you want to navigate away?\";\r\n        }}\r\n      />\r\n      <CONTAINER>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n          }) => (\r\n            <MYFORM onSubmit={handleSubmit} className=\"mx-auto\">\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Customer Name :</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Customer name\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.name}\r\n                  className={\r\n                    touched.name && errors.name ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.name && errors.name ? (\r\n                  <div className=\"error-message\">{errors.name}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"Customer_id\">\r\n                <Form.Label>Customer Id:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Customer_id\"\r\n                  placeholder=\"Customer_id\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Customer_id}\r\n                  className={\r\n                    touched.Customer_id && errors.Customer_id\r\n                      ? \"error\"\r\n                      : null\r\n                  }\r\n                />\r\n\r\n                {touched.Customer_id && errors.Customer_id ? (\r\n                  <div className=\"error-message\">\r\n                    {errors.Customer_id}\r\n                  </div>\r\n                ) : null}\r\n              </Form.Group>\r\n             \r\n        \r\n                  \r\n            \r\n\r\n              <BUTTON\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                Submit\r\n              </BUTTON>\r\n              <BUTTON variant=\"primary\" type=\"reset\">\r\n                Cancel\r\n              </BUTTON>\r\n            </MYFORM>\r\n          )}\r\n        </Formik>\r\n      </CONTAINER>\r\n    </div>\r\n  );\r\n}\r\nexport default AddCustomer;\r\n","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\summaryReport.jsx",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\detailedReport.jsx",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\rentItems.jsx",["112"],"import React, { useState } from \"react\";\r\nimport { Prompt, matchPath } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {rentProducts} from '../Data/TransactionApi'\r\n\r\n\r\nconst CONTAINER = styled.div`\r\n  background: #f7f9fa;\r\n  height: auto;\r\n  width: 90%;\r\n  margin: 5em auto;\r\n  color: snow;\r\n  -webkit-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  -moz-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n\r\n  @media (min-width: 786px) {\r\n    width: 60%;\r\n  }\r\n  label {\r\n    color: #24b9b6;\r\n    font-size: 1.2em;\r\n    font-weight: 400;\r\n  }\r\n\r\n  h1 {\r\n    color: #24b9b6;\r\n    padding-top: 0.5em;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 2.5em;\r\n  }\r\n  .error {\r\n    border: 2px solid #ff6565;\r\n  }\r\n\r\n  .error-message {\r\n    color: #ff6565;\r\n    padding: 0.5em 0.2em;\r\n    height: 1em;\r\n    position: absolute;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst MYFORM = styled(Form)`\r\n  width: 90%;\r\n  text-align: left;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n  @media (min-width: 786px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst BUTTON = styled(Button)`\r\n  background: #1863ab;\r\n  border: none;\r\n  font-size: 1.2em;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    background: #1d3461;\r\n  }\r\n`;\r\n\r\nlet values = {};\r\nconst initialValues = {\r\n  Customer_id: \"\",\r\n Product_id: \"\",\r\n  quantity: \"\",\r\n  type: \"\"\r\n \r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  Customer_id: Yup.string().required(\"Name is required\"),\r\n\r\n Product_id: Yup.string().required(\"No password provided.\"),\r\n\r\n  quantity: Yup.number().required(\"Required\"),\r\n  type: Yup.string().required(\"Required\")\r\n  \r\n});\r\n\r\nfunction RentItems() {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    values = {\r\n      Customer_id: value.Customer_id,\r\n     Product_id: value.Product_id,\r\n      quantity: value.quantity,\r\n      type: value.type,\r\n     \r\n    };\r\n    let views = 0;\r\n    rentProducts(values)\r\n    // ViewDataAPI.saveViewData(views);\r\n    console.log(values)\r\n    setIsSubmitted(true);\r\n    onSubmitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 50 }}>\r\n      <br />\r\n      <h3 style={{ textAlign: \"center\" }}>Rent Items from Inventory</h3>\r\n      <Prompt\r\n        when={!isSubmitted}\r\n        message={({ pathname }) => {\r\n          return matchPath(pathname, { path: \"/transactions/rent\" })\r\n            ? true\r\n            : \"Are you sure you want to navigate away?\";\r\n        }}\r\n      />\r\n      <CONTAINER>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n          }) => (\r\n            <MYFORM onSubmit={handleSubmit} className=\"mx-auto\">\r\n              <Form.Group controlId=\"Customer_id\">\r\n                <Form.Label>Customer Id :</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Customer_id\"\r\n                  placeholder=\"Customer_id\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Customer_id}\r\n                  className={\r\n                    touched.Customer_id && errors.Customer_id ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.Customer_id && errors.Customer_id ? (\r\n                  <div className=\"error-message\">{errors.Customer_id}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Product_id\">\r\n                <Form.Label>Product Id:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"Product_id\"\r\n                  placeholder=\"Product_id\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.Product_id}\r\n                  className={\r\n                    touched.Product_id && errors.Product_id\r\n                      ? \"error\"\r\n                      : null\r\n                  }\r\n                />\r\n\r\n                {touched.Product_id && errors.Product_id ? (\r\n                  <div className=\"error-message\">\r\n                    {errors.Product_id}\r\n                  </div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quantity\">\r\n                <Form.Label>Quantity :</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"quantity\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.quantity}\r\n                  className={\r\n                    touched.quantity && errors.quantity ? \"error\" : null\r\n                  }\r\n                />\r\n                {touched.quantity && errors.quantity ? (\r\n                  <div className=\"error-message\">{errors.quantity}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"type\">\r\n                <Form.Label>Transaction type:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"type\"\r\n                  placeholder=\"type\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.type}\r\n                  className={touched.type && errors.type ? \"error\" : null}\r\n                />\r\n                {touched.type && errors.type ? (\r\n                  <div className=\"error-message\">{errors.type}</div>\r\n                ) : null}\r\n              </Form.Group>\r\n             \r\n\r\n              <BUTTON\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                style={{ marginRight: 15 }}\r\n              >\r\n                Submit\r\n              </BUTTON>\r\n              <BUTTON variant=\"primary\" type=\"reset\">\r\n                Cancel\r\n              </BUTTON>\r\n            </MYFORM>\r\n          )}\r\n        </Formik>\r\n      </CONTAINER>\r\n    </div>\r\n  );\r\n}\r\nexport default RentItems;\r\n","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\returnItems.jsx",["113"],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\layout.jsx",["114"],"import React from \"react\";\r\nimport { Navbar, Nav, NavDropdown,Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Layout = (props) => {\r\n   \r\n  return (\r\n    <div className=\"navbar\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" style={{ fontWeight: 600 }}>\r\n        <Navbar.Brand as={Link} to=\"/\">PIM</Navbar.Brand>\r\n        <Nav className=\"justify-content-end\" style={{ width: \"90%\" }}>\r\n          <Nav.Link as={Link} to=\"/Products\">\r\n            Products\r\n          </Nav.Link>\r\n           <Nav.Link as={Link} to=\"/Customer\" style={{ textColor: \"white\" }}>\r\n           Customer\r\n          </Nav.Link>\r\n\r\n           <NavDropdown title=\"Transaction\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item as={Link} to=\"/transaction/rent\">\r\n             Rent Items\r\n            </NavDropdown.Item>\r\n\r\n            <NavDropdown.Item as={Link} to=\"/transaction/return\">\r\n              Return Items\r\n            </NavDropdown.Item>\r\n            \r\n          </NavDropdown>\r\n            <Nav.Link as={Link} to=\"/report/summary\" style={{ textColor: \"white\" }}>\r\n            Report\r\n          </Nav.Link>\r\n\r\n\r\n            <Nav.Link as={Link} to=\"/Login\" style={{ textColor: \"white\" }}>\r\n           Login\r\n          </Nav.Link>\r\n           {/* <Button  variant=\"dark\"  onClick={handleClick} style={{ textColor: \"white\" }}>\r\n           {text}\r\n          </Button>\r\n           */}\r\n\r\n          \r\n        </Nav>\r\n      </Navbar>\r\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\">\r\n        <Nav>\r\n          <Navbar.Text>All rights reserved | </Navbar.Text>\r\n\r\n          <Navbar.Text>| Copyright@Pim</Navbar.Text>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\cardview.jsx",["115"],"import React from 'react';\r\nimport {Card} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst style={ width: '25rem',borderRadius:'15px' ,fontSize:'20px',color:'white',backgroundColor:\"seagreen\"}\r\n\r\nconst Cardview = ({info,imgsrc}) => {\r\n\r\n    // if(type==\"customer\")\r\n    // {\r\n    //   const  card=<Card variant=\"secondary\" style={style} >\r\n    //             <Card.Img   variant=\"top\" style={{height:250, borderRadius:'15px'}} src={imgsrc} />\r\n    //             <Card.Footer >{info.name}</Card.Footer>\r\n    //             </Card>\r\n    // }\r\n    // else{\r\n//        const card=<Card style={{ width: '18rem' }}>\r\n//   <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" />\r\n//   <Card.Body>\r\n//     <Card.Title>Card Title</Card.Title>\r\n//     <Card.Text>\r\n//       Some quick example text to build on the card title and make up the bulk of\r\n//       the card's content.\r\n//     </Card.Text>\r\n//   </Card.Body>\r\n//   <ListGroup className=\"list-group-flush\">\r\n//     <ListGroupItem>Cras justo odio</ListGroupItem>\r\n//     <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n//     <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n//   </ListGroup>\r\n//   <Card.Body>\r\n//     <Card.Link href=\"#\">Card Link</Card.Link>\r\n//     <Card.Link href=\"#\">Another Link</Card.Link>\r\n//   </Card.Body>\r\n// </Card>\r\n    \r\nconst text=(info.name)?info.name:info.Product_title\r\n \r\n     return (\r\n          <div >\r\n                <Card variant=\"secondary\" style={style} >\r\n                <Card.Img   variant=\"top\" style={{height:250, borderRadius:'15px'}} src={imgsrc} />\r\n                <Card.Footer >{text}</Card.Footer>\r\n                </Card>\r\n                   <br/>\r\n                   <br/>\r\n            \r\n        </div>\r\n\r\n      \r\n    );\r\n};\r\n\r\nexport default Cardview;","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\CustomerAPi.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\ProductApi.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\ReportApi.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\components\\tabledata.jsx",["116"],"import React from 'react';\r\n\r\nlet key=0;\r\nconst tabledata = ({info,type}) => {\r\n\r\nlet summary= <tr>\r\n             <td>{key+1}</td>\r\n              <td>{info.Product_title}</td>\r\n               <td>{info.Quantity_total}</td>\r\n              </tr>\r\n\r\nlet detailed=<tr>\r\n    <td>{key+1}</td>\r\n    <td>{info.Product_id}</td>\r\n    <td>{info.type}</td>\r\n    <td>{info.date}</td>\r\n</tr>\r\n\r\nlet reportdata=type==\"summary\"?summary:detailed\r\n    return (\r\n        <>\r\n       {reportdata}\r\n       </>\r\n    );\r\n};\r\n\r\nexport default tabledata;","C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\UserAPi.js",[],"C:\\Users\\User\\Desktop\\ReactProjects\\tentHouseRental\\tenthouserentalfrontend\\src\\Data\\TransactionApi.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":10,"column":14,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"123","severity":1,"message":"127","line":100,"column":9,"nodeType":"125","messageId":"126","endLine":100,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":9,"column":14,"nodeType":"125","messageId":"126","endLine":9,"endColumn":20},{"ruleId":"123","severity":1,"message":"127","line":92,"column":9,"nodeType":"125","messageId":"126","endLine":92,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":101,"column":9,"nodeType":"125","messageId":"126","endLine":101,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":101,"column":9,"nodeType":"125","messageId":"126","endLine":101,"endColumn":14},{"ruleId":"123","severity":1,"message":"128","line":2,"column":35,"nodeType":"125","messageId":"126","endLine":2,"endColumn":41},{"ruleId":"123","severity":1,"message":"129","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":19,"column":20,"nodeType":"132","messageId":"133","endLine":19,"endColumn":22},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","'views' is assigned a value but never used.","'Button' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]